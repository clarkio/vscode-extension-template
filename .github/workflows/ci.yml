# .github/workflows/ci.yaml
name: Main Branch Full CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  # This is to catch new releases of VS Code which could cause the extension to break
  # Check every Sunday at 12 AM
  schedule:
    - cron: 0 0 * * 0

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        vscode-version: ['1.78.0', stable]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - run: npm ci
        env:
          npm_config_arch: x64
      - name: Test with VS Code ${{ matrix.vscode-version }}
        uses: coactions/setup-xvfb@v1
        env:
          VSCODE_TEST_VERSION: ${{ matrix.vscode-version }}
        with:
          run: npm test

  build:
    permissions:
      contents: write
      packages: write
    # Build the extension for all platforms
    # This will only run on push to main
    # Note: PRs that get merged into main count as a push too
    if: github.event_name == 'push'
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        # Use the following if you need to build for more specific platforms
        # Make sure to comment out the "os" line above here/below "matrix"
        # include:
        #   - os: windows-latest
        #     target: win32-x64
        #     npm_config_arch: x64
        #   - os: windows-latest
        #     target: win32-ia32
        #     npm_config_arch: ia32
        #   - os: windows-latest
        #     target: win32-arm64
        #     npm_config_arch: arm
        #   - os: ubuntu-latest
        #     target: linux-x64
        #     npm_config_arch: x64
        #   - os: ubuntu-latest
        #     target: linux-arm64
        #     npm_config_arch: arm64
        #   - os: ubuntu-latest
        #     target: linux-armhf
        #     npm_config_arch: arm
        #   - os: ubuntu-latest
        #     target: alpine-x64
        #     npm_config_arch: x64
        #   - os: macos-latest
        #     target: darwin-x64
        #     npm_config_arch: x64
        #   - os: macos-latest
        #     target: darwin-arm64
        #     npm_config_arch: arm64
        #   - os: ubuntu-latest
        #     target: universal
    runs-on: ${{ matrix.os }}
    needs: test
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      # Uncomment if you use matrix: include: instead of matrix: os: above
      # - if: matrix.target != 'universal'
      #   name: Install dependencies (with binaries)
      #   run: npm ci
      #   env:
      #     npm_config_arch: ${{ matrix.npm_config_arch }}
      # - if: matrix.target == 'universal'
      - name: Install dependencies (without binaries)
        run: npm ci

        # semantic release package the extension
      - run: npx semantic-release --extends ./package.release.config.js
        env:
          # Uncomment VSCE_TARGER if you use matrix: include: instead
          # of matrix: os: above
          # VSCE_TARGET: ${{ matrix.target }}
          # All tokens are required since semantic-release needs to validate them
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VSCE_PAT: ${{ secrets.VSCE_PAT }}
          # In case you want to publish to OpenVSX
          # OVSX_PAT: ${{ secrets.OVSX_PAT }}

      - uses: actions/upload-artifact@v3
        with:
          # Uncomment name if you use matrix: include: instead
          # of matrix: os: above
          # name: ${{ matrix.target }}
          path: '*.vsix'

  release:
    permissions:
      contents: write
      packages: write
    # Publish the extension to the marketplace
    # This will only run on push to main
    # Note: PRs that get merged into main count as a push too
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: [test, build]
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - run: npm ci

      - uses: actions/download-artifact@v3

      # Semantic release publish the extension
      # This will only run on push to main or when a PR has originated from this repo
      - run: npx semantic-release --extends ./publish.release.config.js
        if: github.event_name == 'push' || github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VSCE_PAT: ${{ secrets.VSCE_PAT }}
          # In case you want to publish to OpenVSX
          # OVSX_PAT: ${{ secrets.OVSX_PAT }}
